# Generated by Django 3.2 on 2021-04-25 05:44

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_patient', models.BooleanField(default=False)),
                ('is_institution', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='ResourceFinderApp.user')),
                ('institute_name', models.CharField(max_length=250, verbose_name='Institution Name')),
                ('city', models.CharField(choices=[('MUM', 'Mumbai'), ('PNQ', 'Pune'), ('BLR', 'Bnaglore'), ('DEL', 'Delhi'), ('KOL', 'Kolkata')], default='MUM', max_length=3, verbose_name='City Name')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('email', models.EmailField(max_length=254, verbose_name='email id')),
                ('type_institute', models.CharField(choices=[('O2', 'Oxygen'), ('ICU', 'ICU'), ('BED', 'Normal Hospital Bed'), ('REM', 'Remdesivir'), ('CLN', 'Clinic')], default='BED', max_length=3, verbose_name='Type of Facility')),
                ('available', models.IntegerField(verbose_name='Number of utilities avaialable')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='ResourceFinderApp.user')),
                ('patient_name', models.CharField(max_length=250, verbose_name='Patient Name')),
                ('city', models.CharField(choices=[('MUM', 'Mumbai'), ('PNQ', 'Pune'), ('BLR', 'Bnaglore'), ('DEL', 'Delhi'), ('KOL', 'Kolkata')], default='MUM', max_length=3, verbose_name='City Name')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('email', models.EmailField(max_length=254, verbose_name='email id')),
                ('results', models.CharField(default='D', max_length=2, verbose_name='COVID Test Results')),
                ('oxygen_level', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Oxygen Level')),
                ('requiements', models.CharField(choices=[('O2', 'Oxygen'), ('ICU', 'ICU'), ('BED', 'Normal Hospital Bed'), ('REM', 'Remdesivir'), ('CLN', 'Clinic')], max_length=3, verbose_name='Requirements')),
                ('morbidities', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], max_length=1, verbose_name='Other Complications')),
                ('vaccination_does', models.IntegerField(choices=[(0, 'Not Taken'), (1, 'Once'), (2, 'Twice')], default=0)),
                ('timestamp', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PatientFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_proof', models.FileField(upload_to='identification/', verbose_name='ID Proof')),
                ('covid_report', models.FileField(upload_to='covid_report/', verbose_name='COVID Report')),
                ('oxymeter_img', models.ImageField(upload_to='oxygen/', verbose_name='Oxygen Level Proof')),
                ('other_reports', models.FileField(upload_to='reports/', verbose_name='Other Reports')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ResourceFinderApp.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ResourceFinderApp.institution')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ResourceFinderApp.patient')),
            ],
        ),
    ]
